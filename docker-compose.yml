version: '3'
services:
  app:
    build: 
      dockerfile: 'Dockerfile'
      context: './bin/app/'
    container_name: 'app'
    volumes: &appvolumes
      - '~/.cache/composer:/root/.composer/cache:delegated'
      - appdata:/var/www/html:delegated
      - sockdata:/sock
    ports: 
      - '80'
    restart: always
    depends_on:
      - db
      - fpm
      - smtp
    networks:
      - app-network
  fpm: 
    build: 
      dockerfile: 'Dockerfile'
      context: './bin/php/7.2-ubuntu/'
    container_name: 'fpm'
    volumes: *appvolumes
    ports: 
      - '9000:9000'
    depends_on:
      - smtp
    networks: 
      - app-network
    tty: true
  cron: 
    build: 
      dockerfile: 'Dockerfile'
      context: './bin/cron/'
    container_name: 'cron'
    volumes: *appvolumes
    restart: always
    depends_on: 
      - db
    networks:
      - app-network
  smtp:
    image: mailhog/mailhog
    container_name: 'mailhog'
    user: root
    ports:
      - '8025:8025'
      - '1025:1025'
    networks:
      - app-network
  db:
    image: mysql:5.7
    container_name: db
    restart: always
    env_file: ./bin/env/db.env
    ports: 
      - '3306'
    volumes:
      - db_data:/var/lib/mysql
      - ./bin/db:/docker-entrypoint-initdb.d/
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports: 
      - '8080:80'
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
    depends_on: 
      - db
    networks:
      - app-network
  varnish:
    build:
      dockerfile: 'Dockerfile'
      context: './bin/varnish'
    container_name: 'varnish'
    ports:
      - '80:80'
    environment: 
      - VIRTUAL_HOST=app
      - VIRTUAL_PORT=80
    depends_on: 
      - app
    networks:
      - app-network
    tty: true
networks:
  app-network:
    driver: bridge
volumes:
  appdata:
  db_data:
    driver: local
  sockdata: